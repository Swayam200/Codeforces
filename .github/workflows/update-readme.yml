name: 🚀 Update Codeforces README

on:
  schedule:
    # Run every day at 7 PM IST
    - cron: '30 13 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Run when new solutions are pushed
  push:
    paths:
      - '**/*.cpp'
      - '**/*.py'
      - '**/*.java'

jobs:
  update-readme:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: 🔄 Update README
      env:
        CODEFORCES_USERNAME: ${{ secrets.CODEFORCES_USERNAME }}
      run: |
        python update_readme.py $CODEFORCES_USERNAME
    
    - name: 💾 Commit Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add README.md
          git commit -m "🚀 Auto-update README with latest Codeforces progress
          
          - Updated problem statistics
          - Refreshed progress tracking
          - Auto-generated on $(date +'%Y-%m-%d %H:%M UTC')
          
          [skip ci]"
          git push
        fi

  # Optional: Add a job to create release notes when you hit milestones
  milestone-check:
    runs-on: ubuntu-latest
    needs: update-readme
    if: success()
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🎯 Check Milestones
      run: |
        # Count solved problems
        PROBLEM_COUNT=$(find . -name "*.cpp" | wc -l)
        
        # Check for milestone achievements
        if [ $((PROBLEM_COUNT % 10)) -eq 0 ] && [ $PROBLEM_COUNT -gt 0 ]; then
          echo "🎉 Milestone reached: $PROBLEM_COUNT problems solved!"
          
          # Create a release
          gh release create "milestone-$PROBLEM_COUNT" \
            --title "🏆 Milestone: $PROBLEM_COUNT Problems Solved!" \
            --notes "Congratulations on solving $PROBLEM_COUNT Codeforces problems! 🎊
            
            🔥 **Achievement Unlocked**: Keep up the great work!
            📈 **Next Goal**: $(($PROBLEM_COUNT + 10)) problems
            
            ---
            *This release was automatically created by GitHub Actions*" \
            --generate-notes
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}